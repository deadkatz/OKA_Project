//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TestServiceImplSoapBinding", Namespace="http://goto10.pl")]
public partial class TestServiceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback testOperationCompleted;
    
    /// <remarks/>
    public TestServiceImplService() {
        this.Url = "http://52.28.65.193:8080/DataProvider/services/TestServiceImpl";
    }
    
    /// <remarks/>
    public event testCompletedEventHandler testCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://goto10.pl", ResponseNamespace="http://goto10.pl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("testReturn")]
    public string test(int x, int y, string s) {
        object[] results = this.Invoke("test", new object[] {
                    x,
                    y,
                    s});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Begintest(int x, int y, string s, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("test", new object[] {
                    x,
                    y,
                    s}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endtest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void testAsync(int x, int y, string s) {
        this.testAsync(x, y, s, null);
    }
    
    /// <remarks/>
    public void testAsync(int x, int y, string s, object userState) {
        if ((this.testOperationCompleted == null)) {
            this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
        }
        this.InvokeAsync("test", new object[] {
                    x,
                    y,
                    s}, this.testOperationCompleted, userState);
    }
    
    private void OntestOperationCompleted(object arg) {
        if ((this.testCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
